(() => {
    jQuery.validator.addMethod("cpf", (value, element) => {
        cpf = value.replace(/[^0-9]/g, '');

        if (cpf.length !== 11) return false;

        if (!![...cpf].reduce(function (a, b) { return (a === b) ? a : NaN; })) return false;

        const multiplicador1 = [10, 9, 8, 7, 6, 5, 4, 3, 2];
        const multiplicador2 = [11, 10, 9, 8, 7, 6, 5, 4, 3, 2];

        let tempCpf = cpf.substring(0, 9);
        let soma = 0;

        for (var i = 0; i < 9; i++)
            soma += tempCpf[i] * multiplicador1[i];

        let resto = soma % 11;
        if (resto < 2)
            resto = 0;
        else
            resto = 11 - resto;

        let digito = resto.toString();
        tempCpf = tempCpf + digito;
        soma = 0;

        for (i = 0; i < 10; i++)
            soma += tempCpf[i] * multiplicador2[i];

        resto = soma % 11;
        if (resto < 2)
            resto = 0;
        else
            resto = 11 - resto;
        digito = digito + resto;

        return cpf.endsWith(digito);
    }, "");
    jQuery.validator.unobtrusive.adapters.add('cpf', [], function (options) {
        options.rules['cpf'] = true;
        options.messages['cpf'] = options.message;
    });

    $.validator.methods.number = function (value, element) {
        return (
            this.optional(element) ||
            /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)?(?:,\d+)?$/.test(value)
        );
    };
})();